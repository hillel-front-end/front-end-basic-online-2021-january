* {
  box-sizing: border-box;
  transition: all 0.5s;
}

/*
selector:pseudoclass {

}
*/


.box {
  width: 30%;
  height: 200px;
  /* background-color: red; */
  border: 1px solid black;
  padding: 10px;
  position: relative;
}

/* .box:hover {
  background-color: blue;
  border: 1px solid yellow;
  width: 50%;
  height: 500px;
} */

/* .box-child {
  width: 100px;
  height: 100px;
  border: 3px solid blue;
} */

/* .box-child__coords {
  position: absolute;
  left: 0px;
  top: 0px;
} */

/* .box:hover .box-child {
  background-color: red;
  left: calc(100% - 100px);
  top: calc(100% - 100px);
} */

.box-2 {
  position: relative;
  left: 0px;
  top: 0px;
}

/* ----------- operators (+, ~) --------------

/* .box-1:hover + .box-2 {
  left: 100px;
  top: 100px;
  transform: rotate(360deg) scale(1.5);
  background-color: red;
} */

/* .box-1:hover ~ .box-3 {
  left: 100px;
  top: 100px;
  transform: rotate(360deg) scale(1.5);
  background-color: red;
} */

.breadcrump {
  /* border: 3px solid red; */
  padding: 10px;
  /* width: 65%; */
}

/* .clearfix {
  clear: both;
} */

.breadcrump__item {
  color: red;
  border: 1px solid black;
  padding: 5px;
  float: left;
  margin-right: 20px;
  position: relative;
}

.breadcrump__item--last {
  margin-right: 0px;
}


/* .separator {
  position: absolute;
  height: 10px;
  width: 10px;
  background-color: red;
  border-radius: 50%;
  left: calc(100% + 5px);
  top: 50%;
  transform: translateY(-50%);
} */

/* n, even odd */
/* span:nth-child(5)  {
  color: blue;
} */

/* span:nth-child(5) .separator  {
  display: none;
} */

/* span:first-child {
  border: 5px solid green;
  text-transform: uppercase;
  font-size: 25px;
} */

/* span:last-child .separator {
  display: none;
} */

/* span:nth-child(even)  {
  color: gold;
  font-size: 20px;
} */

/* span:nth-child(odd)  {
  color: blueviolet;
  font-size: 20px;
} */

/* :nth-child(an+b)

 span:nth-child(2n+1)

 n = 0 => 2 * 0 + 1 => 1
 n = 1 => 2 * 1 + 1 => 3
 n = 2 => 2 * 2 + 1 => 5
 n = 3 => 2 * 3 + 1 => 7
  span:nth-child(2n+1)

*/

/* span:nth-child(2n+1) {
  color: blueviolet;
  font-size: 20px;
} */
 

/* span:last-child  {
  color: blueviolet;
  font-size: 20px;
} */

span:last-of-type {
  color: blueviolet;
  font-size: 20px;
}

span:first-of-type {
  color: blueviolet;
  font-size: 20px;
}

/* :nth-of-type(n) ---> HW */
/* --------------- pseude-elements [after, before] ----------------*/

.block {
  border: 1px solid red;
  margin-bottom: 20px;
}


.block:before {
  content: 'BEFORE';
}


.block:after {
  content: 'AFTER';
  display: block;
  border: 1px solid red;
}

.clearfix:after {
  content: '';
  display: block;
  /* width: 100%; */
  /* height: 1px; */
  clear: both;
  height: 0px;
}

/* .separator {
  position: absolute;
  height: 10px;
  width: 10px;
  background-color: red;
  border-radius: 50%;
  left: calc(100% + 5px);
  top: 50%;
  transform: translateY(-50%);
} */

/* .breadcrump__item:after {
  content: '';
  position: absolute;
  height: 10px;
  width: 10px;
  background-color: red;
  border-radius: 50%;
  left: calc(100% + 5px);
  top: 50%;
  transform: translateY(-50%);
} */

.breadcrump__item:not(:last-of-type):after {
  content: '';
  position: absolute;
  height: 10px;
  width: 10px;
  background-color: red;
  border-radius: 50%;
  left: calc(100% + 5px);
  top: 50%;
  transform: translateY(-50%);
}

/*









   ------------  transition ---------
*/

/* 
 visibility: hidden; */

/*

*/
/* transition-property: opacity;
    transition-duration: 0.5s;
    transition-timing-function: ease-in; 
    transition-delay*/
/* transition: opacity .5s ease-in 1s; */
